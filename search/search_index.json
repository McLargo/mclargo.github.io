{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to McLargo's technical wiki What you can find in here This MUST be a dynamic documentation, constantly updated. Any new tool learn or good practice to include in my daily work must have a space in this project. Also, guidelines/ways of working applicable, no matter my current project. Grouped in different categories: Topic Description DevOps Related to deployments, ci/cd... Programming Directly related to programming Project management Project management stuff Utils Misc of other interesting utils required for daily basics With time and more documents covered, relation between them will be enriched. It shouldn't be a just isolated documents, but more of a wiki to cover my professional philosophy and understanding on technical topics. Using markdown to make it easier to build new documents from IDE. Template sample available for this wiki . Mkdocs as site generator for my documentation. Includes nice features as search, customizable layout and easy deployment to github pages, making it 100% online. Repo that generate this website, can be found in my github. What you cannot find in here cheatsheets, they belong to gists . It enables quicker updates. code, that belongs to github . Either private/public repo. mentoring assets interview process/reviews. Those are not public. books or manuals. Check in Google Drive.","title":"Welcome to McLargo's technical wiki"},{"location":"#welcome-to-mclargos-technical-wiki","text":"","title":"Welcome to McLargo's technical wiki"},{"location":"#what-you-can-find-in-here","text":"This MUST be a dynamic documentation, constantly updated. Any new tool learn or good practice to include in my daily work must have a space in this project. Also, guidelines/ways of working applicable, no matter my current project. Grouped in different categories: Topic Description DevOps Related to deployments, ci/cd... Programming Directly related to programming Project management Project management stuff Utils Misc of other interesting utils required for daily basics With time and more documents covered, relation between them will be enriched. It shouldn't be a just isolated documents, but more of a wiki to cover my professional philosophy and understanding on technical topics. Using markdown to make it easier to build new documents from IDE. Template sample available for this wiki . Mkdocs as site generator for my documentation. Includes nice features as search, customizable layout and easy deployment to github pages, making it 100% online. Repo that generate this website, can be found in my github.","title":"What you can find in here"},{"location":"#what-you-cannot-find-in-here","text":"cheatsheets, they belong to gists . It enables quicker updates. code, that belongs to github . Either private/public repo. mentoring assets interview process/reviews. Those are not public. books or manuals. Check in Google Drive.","title":"What you cannot find in here"},{"location":"template/","text":"Template Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Head1 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Head2 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. References Lorem impsum","title":"Template"},{"location":"template/#template","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"Template"},{"location":"template/#head1","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"Head1"},{"location":"template/#head2","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"Head2"},{"location":"template/#references","text":"Lorem impsum","title":"References"},{"location":"devops/docker/","text":"Docker In a nutshell, docker executes containers, which is a customize instance of an image. Encapsulate libraries, dependencies, environment variables, configuration... in a Dockerfile to enable easy initialization of new services, without install any local dependencies that can corrupt your system. You can start/stop/access those containers. Totally portable to any OS. References Get started portainer keep bash history","title":"Docker"},{"location":"devops/docker/#docker","text":"In a nutshell, docker executes containers, which is a customize instance of an image. Encapsulate libraries, dependencies, environment variables, configuration... in a Dockerfile to enable easy initialization of new services, without install any local dependencies that can corrupt your system. You can start/stop/access those containers. Totally portable to any OS.","title":"Docker"},{"location":"devops/docker/#references","text":"Get started portainer keep bash history","title":"References"},{"location":"devops/features-toggles/","text":"Features Toggles When new functionality is working together another set of changes, it is hard to reduce the impact. For this, we can enable in our code a set of flags to enable certain parts of the code. useNewAlgorithm = False # useNewAlgorithm = True # UNCOMMENT IF YOU ARE WORKING ON THE NEW SR ALGORITHM if useNewAlgorithm: return enhancedSplineReticulation(); return oldFashionedSplineReticulation(); But this is quite hardcoding, and if you are in a collaborative environment, you will still need to deploy your code to test. For that, Toggle Router came to the picture. It could be something fancy with an UI, or much simple. But the idea is to change dynamically those values. Stored in memory, config, database... whatever suits you. Enables many other release feature, like canary release, A/B testing... When to use features flags Improve feature rollout Operational efficiency Learn from experimentation Empower teams with entitlements References Feature Toggles Feature Flags","title":"Features Toggles"},{"location":"devops/features-toggles/#features-toggles","text":"When new functionality is working together another set of changes, it is hard to reduce the impact. For this, we can enable in our code a set of flags to enable certain parts of the code. useNewAlgorithm = False # useNewAlgorithm = True # UNCOMMENT IF YOU ARE WORKING ON THE NEW SR ALGORITHM if useNewAlgorithm: return enhancedSplineReticulation(); return oldFashionedSplineReticulation(); But this is quite hardcoding, and if you are in a collaborative environment, you will still need to deploy your code to test. For that, Toggle Router came to the picture. It could be something fancy with an UI, or much simple. But the idea is to change dynamically those values. Stored in memory, config, database... whatever suits you. Enables many other release feature, like canary release, A/B testing...","title":"Features Toggles"},{"location":"devops/features-toggles/#when-to-use-features-flags","text":"Improve feature rollout Operational efficiency Learn from experimentation Empower teams with entitlements","title":"When to use features flags"},{"location":"devops/features-toggles/#references","text":"Feature Toggles Feature Flags","title":"References"},{"location":"devops/k8s/","text":"Kubernetes It is a high-disponiblity platform. It support different application available to be consume Instead of monolithic application, microservices oriented. 1 Pod -> 1 or more docker container -> 1 image -> 1 service If a pod dies, controller (object) automatically enable another with configuration expected. Main concept is objects. It can be of several types. Master-node, it has the control . Quorum, master-node must be a odd number of instances. Cluster between master/worker nodes Service - > deployment -> replicaset -> POD Service can be: - cluster IP (DNS) - load balancer - node ports Ingress, it is like a callback. Storage or persistent Other concepts: - label - memory - cpu - rback -namespaces Local k8s cluster minikube quickly sets up a local Kubernetes cluster on macOS, Linux, and Windows. Easy to install and start working. Install and run minikube to have a local cluster for k8s in local. If minikube is running, automatically context/namespace is updated to use then one's from minikube. If you are working with other k8s cluster, keep in mind this change. Always doble-check for namespace or context before deploying to the cluster. To work with cluster outside local, either you stop minikube or change namespace. Careful, when you stop minikube, context/namespace are set to null, so your kube commands won't be pointing to any context. You need to explicitly set again context. minikube command is just a proxy of kubectl commands, with a different command format but doing the same underneath. Helm charts Each object requires a custom yaml configuration file. Helm charts provides an abstractions of the objects to deploy. Objects are different and it is like a puzzle. It needs to fit communication/labels/namespaces... It provides a values.yaml with default stuff required. Also templates to a more complex logic. All this parametrization is embembed in the configuration files, creating new templates. This values can be reuse in each object.yaml file. Maximizing reusability and reducing error-prone References k9s commands minikube handbook minikube/kubectl commands","title":"Kubernetes"},{"location":"devops/k8s/#kubernetes","text":"It is a high-disponiblity platform. It support different application available to be consume Instead of monolithic application, microservices oriented. 1 Pod -> 1 or more docker container -> 1 image -> 1 service If a pod dies, controller (object) automatically enable another with configuration expected. Main concept is objects. It can be of several types. Master-node, it has the control . Quorum, master-node must be a odd number of instances. Cluster between master/worker nodes Service - > deployment -> replicaset -> POD Service can be: - cluster IP (DNS) - load balancer - node ports Ingress, it is like a callback. Storage or persistent Other concepts: - label - memory - cpu - rback -namespaces","title":"Kubernetes"},{"location":"devops/k8s/#local-k8s-cluster","text":"minikube quickly sets up a local Kubernetes cluster on macOS, Linux, and Windows. Easy to install and start working. Install and run minikube to have a local cluster for k8s in local. If minikube is running, automatically context/namespace is updated to use then one's from minikube. If you are working with other k8s cluster, keep in mind this change. Always doble-check for namespace or context before deploying to the cluster. To work with cluster outside local, either you stop minikube or change namespace. Careful, when you stop minikube, context/namespace are set to null, so your kube commands won't be pointing to any context. You need to explicitly set again context. minikube command is just a proxy of kubectl commands, with a different command format but doing the same underneath.","title":"Local k8s cluster"},{"location":"devops/k8s/#helm-charts","text":"Each object requires a custom yaml configuration file. Helm charts provides an abstractions of the objects to deploy. Objects are different and it is like a puzzle. It needs to fit communication/labels/namespaces... It provides a values.yaml with default stuff required. Also templates to a more complex logic. All this parametrization is embembed in the configuration files, creating new templates. This values can be reuse in each object.yaml file. Maximizing reusability and reducing error-prone","title":"Helm charts"},{"location":"devops/k8s/#references","text":"k9s commands minikube handbook minikube/kubectl commands","title":"References"},{"location":"devops/serverless/","text":"Serverless Computing Instead of run our application in our servers, this approach is focus on let others run (and charge depending on how many resource are used) our code. Servers are hard to maintain, needs to be up-to-date, always up and running. Serverless is less headache. We can forget about security, upgrade, scalability... Some providers of Functions as a Service (FaaS) are AWS, Google and Azure. They can handle out of the box most of the events, including http requests, database events, queuing services, monitoring alerts, file uploads, scheduled events, cronjobs... It is based on a microservice architecture, not monolith. There is no context shared among them. Cold start is the bigger cons. As the cointainer is brought up alive when there is a request, there may be some latency between request and execution. Today, this time has improved a lot. It depends on language, size of the function... References Serveless","title":"Serverless Computing"},{"location":"devops/serverless/#serverless-computing","text":"Instead of run our application in our servers, this approach is focus on let others run (and charge depending on how many resource are used) our code. Servers are hard to maintain, needs to be up-to-date, always up and running. Serverless is less headache. We can forget about security, upgrade, scalability... Some providers of Functions as a Service (FaaS) are AWS, Google and Azure. They can handle out of the box most of the events, including http requests, database events, queuing services, monitoring alerts, file uploads, scheduled events, cronjobs... It is based on a microservice architecture, not monolith. There is no context shared among them. Cold start is the bigger cons. As the cointainer is brought up alive when there is a request, there may be some latency between request and execution. Today, this time has improved a lot. It depends on language, size of the function...","title":"Serverless Computing"},{"location":"devops/serverless/#references","text":"Serveless","title":"References"},{"location":"programming/django/","text":"Django Installation to install django, lets create a requirements.txt file, with desired version of django django==1.11.13 then, install libraries in file pip install -r requirements.txt check everything went ok: django-admin -h Starting new project First, on Django, you'll need to create a project by: django-admin startproject <project> that's basic configuration. To check evertyhing looks good, run: python manage.py runserver if we want to test via shell, run: python manage.py shell basic schema of django app a project can contains one or more apps. Also, an app can be used in several projects To create a new app in our project: python manage.py startapp <app> New folder is created. It contains basic schema: <app>/views.py represents the controller. One function per view. get data, processed it, and render template if needed <app>/urls.py where url is mapped to corresponding function in views file <app>/models.py represent the models. Django use an ORM, that means, tables and database corresponds to Model classes. Add app configuration to project/settings.py : INSTALLED_APPS = [ '<app>.apps.<App>Config', Migrations Every changes on models, needs to be migrate to database schema. After add/update information to models.py file, changes needs to be done on database level Make migrations: python manage.py makemigrations <app> See migration on sql: python manage.py sqlmigrate <app> <number> Run migrations: python manage.py migrate django admin - basic commands Creating an admin user: python manage.py createsuperuser Tests needs to be created. Run with: python manage.py test <app>","title":"Django"},{"location":"programming/django/#django","text":"","title":"Django"},{"location":"programming/django/#installation","text":"to install django, lets create a requirements.txt file, with desired version of django django==1.11.13 then, install libraries in file pip install -r requirements.txt check everything went ok: django-admin -h","title":"Installation"},{"location":"programming/django/#starting-new-project","text":"First, on Django, you'll need to create a project by: django-admin startproject <project> that's basic configuration. To check evertyhing looks good, run: python manage.py runserver if we want to test via shell, run: python manage.py shell","title":"Starting new project"},{"location":"programming/django/#basic-schema-of-django-app","text":"a project can contains one or more apps. Also, an app can be used in several projects To create a new app in our project: python manage.py startapp <app> New folder is created. It contains basic schema: <app>/views.py represents the controller. One function per view. get data, processed it, and render template if needed <app>/urls.py where url is mapped to corresponding function in views file <app>/models.py represent the models. Django use an ORM, that means, tables and database corresponds to Model classes. Add app configuration to project/settings.py : INSTALLED_APPS = [ '<app>.apps.<App>Config',","title":"basic schema of django app"},{"location":"programming/django/#migrations","text":"Every changes on models, needs to be migrate to database schema. After add/update information to models.py file, changes needs to be done on database level Make migrations: python manage.py makemigrations <app> See migration on sql: python manage.py sqlmigrate <app> <number> Run migrations: python manage.py migrate","title":"Migrations"},{"location":"programming/django/#django-admin-basic-commands","text":"Creating an admin user: python manage.py createsuperuser Tests needs to be created. Run with: python manage.py test <app>","title":"django admin - basic commands"},{"location":"programming/openapi/","text":"Open API TODO: fulfill Why is needed? It provides human and machine readable information about your REST API you are devolving It is a nice tool to share information internally and externally. People knows in which stage we are, what kind of response are expected... everything is shared in a common place. https://swagger.io/docs/specification/about/ two different aproach COde FIrst or Open APi specification first Well it depends. If requirements are not quite clear, may be good idea to start develop and create open api later","title":"Open API"},{"location":"programming/openapi/#open-api","text":"TODO: fulfill","title":"Open API"},{"location":"programming/openapi/#why-is-needed","text":"It provides human and machine readable information about your REST API you are devolving It is a nice tool to share information internally and externally. People knows in which stage we are, what kind of response are expected... everything is shared in a common place. https://swagger.io/docs/specification/about/ two different aproach COde FIrst or Open APi specification first Well it depends. If requirements are not quite clear, may be good idea to start develop and create open api later","title":"Why is needed?"},{"location":"programming/python/","text":"Python TODO: REVIEW Cursos pyhon python 3.7 https://www.udacity.com/course/introduction-to-python--ud1110 https://www.stavros.io/tutorials/python/ https://learnxinyminutes.com/docs/python/ https://www.tutorialspoint.com/python3/index.htm https://knightlab.northwestern.edu/2014/06/05/five-mini-programming-projects-for-the-python-beginner/ https://www.hackerrank.com/challenges/py-set-add/problem https://www.djangoproject.com/ pep8 https://www.python.org/dev/peps/pep-0008/ use 4 spaces, instad of tab use two line breack to separate class or methods use one line breack between methods inside a class how to import library standard libraries 3pp libraries django libraries local importation CAREFUL while doing import it is relative import if it is same app: .{class} better use absolute import: {app}.{class} avoid using from something import * use _ instead of - avoid use of abbreviature while defining variable, classes or methods one empty line at the end of the file 79 max length of line use flake8 and pylint , standard libraries to check pep8 and lint\u00ba description python es un lenguaje (maravilloso) de programaci\u00f3n. Es un lenguage interpretado (no necesita compilaci\u00f3n de un ejecutable como java). Eso permite que podamos jugar con \u00e9l, bien desde la l\u00ednea de comandos, hasta ficheros m\u00e1s complejos o aplicaciones que soporten servicios web. Tutorial base en castellano https://www.learnpython.org/es/ Basic tutorial from python (english) https://docs.python.org/3/tutorial/index.html virtualenvs As your python application may in most of the cases specific libraries versions, having all of them installed at once in your machine could be problematic. https://pythonbasics.org/virtualenv/ Learn python in 10 minutes https://www.stavros.io/tutorials/python/ https://learnxinyminutes.com/docs/python/ Diferentes tipos de variables: - integer: 2 - float: 2.1 - string/unicode: 'hello' / u'Hola Ra\u00fal' - list: [1, 2, 3] - tuple: (1, 2,3, ) - dictionary: {'key': 'value'} - boolean - custom objects Condicionales: - if 1 == 1: - if 1 != 1: - if 1 in [1,2]: - if 1 not in [1,2]: - else - elif Bucles: - for item in items: - while i < 6:","title":"Python"},{"location":"programming/python/#python","text":"TODO: REVIEW","title":"Python"},{"location":"programming/python/#cursos-pyhon","text":"python 3.7 https://www.udacity.com/course/introduction-to-python--ud1110 https://www.stavros.io/tutorials/python/ https://learnxinyminutes.com/docs/python/ https://www.tutorialspoint.com/python3/index.htm https://knightlab.northwestern.edu/2014/06/05/five-mini-programming-projects-for-the-python-beginner/ https://www.hackerrank.com/challenges/py-set-add/problem https://www.djangoproject.com/","title":"Cursos pyhon"},{"location":"programming/python/#pep8","text":"https://www.python.org/dev/peps/pep-0008/ use 4 spaces, instad of tab use two line breack to separate class or methods use one line breack between methods inside a class how to import library standard libraries 3pp libraries django libraries local importation CAREFUL while doing import it is relative import if it is same app: .{class} better use absolute import: {app}.{class} avoid using from something import * use _ instead of - avoid use of abbreviature while defining variable, classes or methods one empty line at the end of the file 79 max length of line use flake8 and pylint , standard libraries to check pep8 and lint\u00ba","title":"pep8"},{"location":"programming/python/#description","text":"python es un lenguaje (maravilloso) de programaci\u00f3n. Es un lenguage interpretado (no necesita compilaci\u00f3n de un ejecutable como java). Eso permite que podamos jugar con \u00e9l, bien desde la l\u00ednea de comandos, hasta ficheros m\u00e1s complejos o aplicaciones que soporten servicios web. Tutorial base en castellano https://www.learnpython.org/es/ Basic tutorial from python (english) https://docs.python.org/3/tutorial/index.html virtualenvs As your python application may in most of the cases specific libraries versions, having all of them installed at once in your machine could be problematic. https://pythonbasics.org/virtualenv/ Learn python in 10 minutes https://www.stavros.io/tutorials/python/ https://learnxinyminutes.com/docs/python/ Diferentes tipos de variables: - integer: 2 - float: 2.1 - string/unicode: 'hello' / u'Hola Ra\u00fal' - list: [1, 2, 3] - tuple: (1, 2,3, ) - dictionary: {'key': 'value'} - boolean - custom objects Condicionales: - if 1 == 1: - if 1 != 1: - if 1 in [1,2]: - if 1 not in [1,2]: - else - elif Bucles: - for item in items: - while i < 6:","title":"description"},{"location":"programming/virtualenvs/","text":"Virtualenvs What is virtualenv Most important thing in python, is http://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/ virtualenv is a tool to create isolated Python environments. virtualenv creates a folder which contains all the necessary executables and libraries to use the packages that a Python project would need. Installation To install virtualenv tool: pip install virtualenv Test your installation: virtualenv --version Basic Usage how to create a virtual environment for a project: cd /home/<user>/.virtualenvs/ virtualenv <my_project> --python=/usr/bin/<python-version> To use a particual virtual env, it needs to be activated: source ~/.virtualenvs/<my_project>/bin/activate Evertyhing you import or install in an activated virtualenv, will be just for this environment To deactivate a virtual environment: deactivate","title":"Virtualenvs"},{"location":"programming/virtualenvs/#virtualenvs","text":"","title":"Virtualenvs"},{"location":"programming/virtualenvs/#what-is-virtualenv","text":"Most important thing in python, is http://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/ virtualenv is a tool to create isolated Python environments. virtualenv creates a folder which contains all the necessary executables and libraries to use the packages that a Python project would need.","title":"What is virtualenv"},{"location":"programming/virtualenvs/#installation","text":"To install virtualenv tool: pip install virtualenv Test your installation: virtualenv --version","title":"Installation"},{"location":"programming/virtualenvs/#basic-usage","text":"how to create a virtual environment for a project: cd /home/<user>/.virtualenvs/ virtualenv <my_project> --python=/usr/bin/<python-version> To use a particual virtual env, it needs to be activated: source ~/.virtualenvs/<my_project>/bin/activate Evertyhing you import or install in an activated virtualenv, will be just for this environment To deactivate a virtual environment: deactivate","title":"Basic Usage"},{"location":"project-management/architecture-decision-record/","text":"Architecture decision record Usually, decision on a project are made verbally, or during a discussion in chat/email, across few people (colleagues, customer...) inside a context. If we don't document these decisions, it is going to be hard to remember why decision was made in few months. If those documents are missing, next generation of developers can just blindly accept it (team will be afraid of make any changes they don't understand) or blindly change it (project can be damage or have side effects). With these documents included inside the project, makes them easier to related and maintain. These documents needs to be simply (low effort is put, but very agile), and devs don't get lazy to create them. Help onboarding people to get up to speed in a asynchronous way. A missing decision can be identify during PR review, when new patter/library is added without corresponding ADR document. Even enough small decisions can compound into a future problem that requires a large process or effort Components Title: brief description of the decision Context: explains the context and facts behind the decision Decision: longer statements of the decision made Status: [Proposed, Accepted, Deprecated, Superseded] Consequences: how it will impact the project itself Tips for using Lightweight ADR Use markdown and store along with the component it relates to in source control Number the files sequentially, don't reuse it (just update if required) Keep it brief and use plain, easy to understand language Peer review as you would code For cross cutting decisions that affect multiple components consider making a separate \"architecture\" repository When you make a decision document it immediately! References Lightweight decision records Documenting architecture decision Write decision record","title":"Architecture Decision Records"},{"location":"project-management/architecture-decision-record/#architecture-decision-record","text":"Usually, decision on a project are made verbally, or during a discussion in chat/email, across few people (colleagues, customer...) inside a context. If we don't document these decisions, it is going to be hard to remember why decision was made in few months. If those documents are missing, next generation of developers can just blindly accept it (team will be afraid of make any changes they don't understand) or blindly change it (project can be damage or have side effects). With these documents included inside the project, makes them easier to related and maintain. These documents needs to be simply (low effort is put, but very agile), and devs don't get lazy to create them. Help onboarding people to get up to speed in a asynchronous way. A missing decision can be identify during PR review, when new patter/library is added without corresponding ADR document. Even enough small decisions can compound into a future problem that requires a large process or effort","title":"Architecture decision record"},{"location":"project-management/architecture-decision-record/#components","text":"Title: brief description of the decision Context: explains the context and facts behind the decision Decision: longer statements of the decision made Status: [Proposed, Accepted, Deprecated, Superseded] Consequences: how it will impact the project itself","title":"Components"},{"location":"project-management/architecture-decision-record/#tips-for-using-lightweight-adr","text":"Use markdown and store along with the component it relates to in source control Number the files sequentially, don't reuse it (just update if required) Keep it brief and use plain, easy to understand language Peer review as you would code For cross cutting decisions that affect multiple components consider making a separate \"architecture\" repository When you make a decision document it immediately!","title":"Tips for using Lightweight ADR"},{"location":"project-management/architecture-decision-record/#references","text":"Lightweight decision records Documenting architecture decision Write decision record","title":"References"},{"location":"project-management/c4-model/","text":"C4 model C4 model represents different diagrams for different roles working together for the same ecosystem. Not everyone needs the same level of details on a syem/service. Different levels reaches to different roles. And it is easy to zoom-in/zoom-out to understand more/less details. L1 - System contexts Big boxes, where different system of the ecosystem working together L2 - container diagram Zoom in on a system. What is inside, different services running inside it (web page, database mobile app...) and relationships L3 - component diagram Zoom in a container. How the code will be divided, major building blocks and their interactions L4 - Code Zoom in a component, usually is not recommend, as it contains too much details, and it is not worthy. Can be generated on demand by IDE Notations and tips Title, short and meaningful Keep Visual consistency Avoid acronyms Schema of a box Name [What represent] Description Lines, usually uni-directional. Shows data flows, with explicit notation on it Show bi-directional lines when intents are different Add words to make the intent explicit Key/Legend to explain shapes, lines, colors, border... even if they seem obvious Increase the readability of software architecture diagrams, so they can stand alone","title":"C4 Model"},{"location":"project-management/c4-model/#c4-model","text":"C4 model represents different diagrams for different roles working together for the same ecosystem. Not everyone needs the same level of details on a syem/service. Different levels reaches to different roles. And it is easy to zoom-in/zoom-out to understand more/less details.","title":"C4 model"},{"location":"project-management/c4-model/#l1-system-contexts","text":"Big boxes, where different system of the ecosystem working together","title":"L1 - System contexts"},{"location":"project-management/c4-model/#l2-container-diagram","text":"Zoom in on a system. What is inside, different services running inside it (web page, database mobile app...) and relationships","title":"L2 - container diagram"},{"location":"project-management/c4-model/#l3-component-diagram","text":"Zoom in a container. How the code will be divided, major building blocks and their interactions","title":"L3 - component diagram"},{"location":"project-management/c4-model/#l4-code","text":"Zoom in a component, usually is not recommend, as it contains too much details, and it is not worthy. Can be generated on demand by IDE","title":"L4 - Code"},{"location":"project-management/c4-model/#notations-and-tips","text":"Title, short and meaningful Keep Visual consistency Avoid acronyms Schema of a box Name [What represent] Description Lines, usually uni-directional. Shows data flows, with explicit notation on it Show bi-directional lines when intents are different Add words to make the intent explicit Key/Legend to explain shapes, lines, colors, border... even if they seem obvious Increase the readability of software architecture diagrams, so they can stand alone","title":"Notations and tips"},{"location":"project-management/scrum/","text":"SCRUM Objectives, TBD Not everything is closed at the beginning of the sprint. Flexibility to learn. Focus on objective of the sprint, complete task and give value to the product. Communication is key. It is not about the person, is the team. Daily Avoid doing reporting. Discussion should be based on meeting the objective of the sprint. Planning next sprint Refinement session for task planed for next sprint is required, so during sprint there is no mismatch. Discussion can happens at this stage, but it should be as clear for everyone. Clear Acceptance Criteria from the business point of view. Add value to the project. Planning, where estimation of tickets come to place. Define a Goal for the sprint. Capacity of the team, is goal of sprint achievable. After sprint is complete Reviews, with stakeholder and after sprint. Show delivery, progress and value during the sprint. Retro, discussion about what happened in last sprint.","title":"SCRUM"},{"location":"project-management/scrum/#scrum","text":"Objectives, TBD Not everything is closed at the beginning of the sprint. Flexibility to learn. Focus on objective of the sprint, complete task and give value to the product. Communication is key. It is not about the person, is the team.","title":"SCRUM"},{"location":"project-management/scrum/#daily","text":"Avoid doing reporting. Discussion should be based on meeting the objective of the sprint.","title":"Daily"},{"location":"project-management/scrum/#planning-next-sprint","text":"Refinement session for task planed for next sprint is required, so during sprint there is no mismatch. Discussion can happens at this stage, but it should be as clear for everyone. Clear Acceptance Criteria from the business point of view. Add value to the project. Planning, where estimation of tickets come to place. Define a Goal for the sprint. Capacity of the team, is goal of sprint achievable.","title":"Planning next sprint"},{"location":"project-management/scrum/#after-sprint-is-complete","text":"Reviews, with stakeholder and after sprint. Show delivery, progress and value during the sprint. Retro, discussion about what happened in last sprint.","title":"After sprint is complete"},{"location":"project-management/tech-lead/","text":"Technical leader TODO: review A tech lead job is to make sure the team work with quality. Part of this job is to plan, design, lean and execute technical solutions and improvements. Interact with other tech leads, sharing information and good practices. Responsability Code quality assurance. Testing, coverage... Make sure style guide matches. pre-commit, sonar, jenkins, githubaction.... Provide design direction. Follow SOLID principles Good pull request practices Motivation From external party working with a client, we are the providers, the ones that gives the solution. Objective of a ticket is to give value to the product, not just close tickets. Adapt our work methodology. Client can guide, give us rules. But our work is our project. And needs to be the best possible. We as external need to be lead Good practices TODO: Redact a generic definition of DONE - before creating a new class or method, be sure there isn't such similar functionality already in the code - do unit tests - do functional tests - validate flake8, mypy and isort - poetry vs pipenv - close contracts - fill with more tools Commit lint online Docstring pydoc What is a tech lead tech leads are software engineers that enable the team to work with quality. agile/scrum methodology https://www.cprime.com/resources/what-is-agile-what-is-scrum/ Scrum significantly increases productivity and reduces time to benefits relative to classic \u201cwaterfall\u201d processes. Scrum processes enable organizations to adjust smoothly to rapidly-changing requirements, and produce a product that meets evolving business goals. Increase the quality of the deliverables Cope better with change (and expect the changes) Provide better estimates while spending less time creating them Be more in control of the project schedule and state Benefits to Customer Customers find that the vendor is more responsive to development requests. High-value features are developed and delivered more quickly with short cycles, than with the longer cycles favored by classic \u201cwaterfall\u201d processes. Benefits to Vendors Vendors reduce wastage by focusing development effort on high-value features, and reduce time-to-market relative to waterfall processes due to decreased overhead and increased efficiency. Improved customer satisfaction translates to better customer retention and more positive customer references. Benefits to Development Teams Team members enjoy development work, and like to see their work used and valued. Scrum benefits Team References 5 responsibilities of a Tech Lead and 17 metrics to track their performance","title":"Technical Leader"},{"location":"project-management/tech-lead/#technical-leader","text":"TODO: review A tech lead job is to make sure the team work with quality. Part of this job is to plan, design, lean and execute technical solutions and improvements. Interact with other tech leads, sharing information and good practices.","title":"Technical leader"},{"location":"project-management/tech-lead/#responsability","text":"Code quality assurance. Testing, coverage... Make sure style guide matches. pre-commit, sonar, jenkins, githubaction.... Provide design direction. Follow SOLID principles Good pull request practices","title":"Responsability"},{"location":"project-management/tech-lead/#motivation","text":"From external party working with a client, we are the providers, the ones that gives the solution. Objective of a ticket is to give value to the product, not just close tickets. Adapt our work methodology. Client can guide, give us rules. But our work is our project. And needs to be the best possible. We as external need to be lead","title":"Motivation"},{"location":"project-management/tech-lead/#good-practices","text":"TODO: Redact a generic definition of DONE - before creating a new class or method, be sure there isn't such similar functionality already in the code - do unit tests - do functional tests - validate flake8, mypy and isort - poetry vs pipenv - close contracts - fill with more tools Commit lint online Docstring pydoc What is a tech lead tech leads are software engineers that enable the team to work with quality.","title":"Good practices"},{"location":"project-management/tech-lead/#agilescrum-methodology","text":"https://www.cprime.com/resources/what-is-agile-what-is-scrum/ Scrum significantly increases productivity and reduces time to benefits relative to classic \u201cwaterfall\u201d processes. Scrum processes enable organizations to adjust smoothly to rapidly-changing requirements, and produce a product that meets evolving business goals. Increase the quality of the deliverables Cope better with change (and expect the changes) Provide better estimates while spending less time creating them Be more in control of the project schedule and state","title":"agile/scrum methodology"},{"location":"project-management/tech-lead/#benefits-to-customer","text":"Customers find that the vendor is more responsive to development requests. High-value features are developed and delivered more quickly with short cycles, than with the longer cycles favored by classic \u201cwaterfall\u201d processes. Benefits to Vendors Vendors reduce wastage by focusing development effort on high-value features, and reduce time-to-market relative to waterfall processes due to decreased overhead and increased efficiency. Improved customer satisfaction translates to better customer retention and more positive customer references. Benefits to Development Teams Team members enjoy development work, and like to see their work used and valued. Scrum benefits Team","title":"Benefits to Customer"},{"location":"project-management/tech-lead/#references","text":"5 responsibilities of a Tech Lead and 17 metrics to track their performance","title":"References"},{"location":"project-management/waterfall-methodology/","text":"Waterfall methodology Waterfall methodology is a linear project management, when requirements are defined at beginning. Task are defined sequential in a project plan (Gantt Chart) to accommodate those requirements The Phases of the Waterfall Model The waterfall approach has, at least, five to seven phases that follow in strict linear order, where a phase can\u2019t begin until the previous phase has been completed. The specific names of the waterfall steps vary, but they were originally defined by its inventor, Winston W. Royce, in the following way: Requirements The key aspect of the waterfall methodology is that all customer requirements are gathered at the beginning of the project, allowing every other phase to be planned without further customer correspondence until the product is complete. It is assumed that all requirements can be gathered at this waterfall management phase. Design The design phase of the waterfall process is best broken up into two subphases: logical design and physical design. The logical design subphase is when possible solutions are brainstormed and theorized. The physical design subphase is when those theoretical ideas and schemas are made into concrete specifications. Implementation The implementation phase is when programmers assimilate the requirements and specifications from the previous phases and produce actual code. Verification This phase is when the customer reviews the product to make sure that it meets the requirements laid out at the beginning of the waterfall project. This is done by releasing the completed product to the customer. Maintenance The customer is regularly using the product during the maintenance phase, discovering bugs, inadequate features and other errors that occurred during production. The production team applies these fixes as necessary until the customer is satisfied.","title":"Waterfall Methodoloy"},{"location":"project-management/waterfall-methodology/#waterfall-methodology","text":"Waterfall methodology is a linear project management, when requirements are defined at beginning. Task are defined sequential in a project plan (Gantt Chart) to accommodate those requirements","title":"Waterfall methodology"},{"location":"project-management/waterfall-methodology/#the-phases-of-the-waterfall-model","text":"The waterfall approach has, at least, five to seven phases that follow in strict linear order, where a phase can\u2019t begin until the previous phase has been completed. The specific names of the waterfall steps vary, but they were originally defined by its inventor, Winston W. Royce, in the following way:","title":"The Phases of the Waterfall Model"},{"location":"project-management/waterfall-methodology/#requirements","text":"The key aspect of the waterfall methodology is that all customer requirements are gathered at the beginning of the project, allowing every other phase to be planned without further customer correspondence until the product is complete. It is assumed that all requirements can be gathered at this waterfall management phase.","title":"Requirements"},{"location":"project-management/waterfall-methodology/#design","text":"The design phase of the waterfall process is best broken up into two subphases: logical design and physical design. The logical design subphase is when possible solutions are brainstormed and theorized. The physical design subphase is when those theoretical ideas and schemas are made into concrete specifications.","title":"Design"},{"location":"project-management/waterfall-methodology/#implementation","text":"The implementation phase is when programmers assimilate the requirements and specifications from the previous phases and produce actual code.","title":"Implementation"},{"location":"project-management/waterfall-methodology/#verification","text":"This phase is when the customer reviews the product to make sure that it meets the requirements laid out at the beginning of the waterfall project. This is done by releasing the completed product to the customer.","title":"Verification"},{"location":"project-management/waterfall-methodology/#maintenance","text":"The customer is regularly using the product during the maintenance phase, discovering bugs, inadequate features and other errors that occurred during production. The production team applies these fixes as necessary until the customer is satisfied.","title":"Maintenance"},{"location":"project-management/work-remotely/","text":"Work remotely In modern world, and specially after COVID-19 pandemic, work remotely is a reality for IT sector. Luckily, I have been working in companies with high compromise and respect for work remotely. And I like it :) Some key notes to take into consideration: Trust people Data driven Think beyond schedule Promote async communication Better planning with less distractions","title":"Work Remotely"},{"location":"project-management/work-remotely/#work-remotely","text":"In modern world, and specially after COVID-19 pandemic, work remotely is a reality for IT sector. Luckily, I have been working in companies with high compromise and respect for work remotely. And I like it :) Some key notes to take into consideration: Trust people Data driven Think beyond schedule Promote async communication Better planning with less distractions","title":"Work remotely"},{"location":"utils/daemon/","text":"Linux Daemon How to create a daemon in linux Create new file in path /etc/init.d/ Open and copy sample in url. Update some of the variables, like name description and path to python file. On python path, point to the python created in the virtualenv, so it will have installed corresponding libraries Give writes privilegies chmod +x /etc/init.d/<daemon-name> -v Reload daemon configuration systemctl daemon-reload Start service service <daemon-name> start All operations below may be required to be executed with sudo References Instructions Extra docu","title":"Daemon"},{"location":"utils/daemon/#linux-daemon","text":"","title":"Linux Daemon"},{"location":"utils/daemon/#how-to-create-a-daemon-in-linux","text":"Create new file in path /etc/init.d/ Open and copy sample in url. Update some of the variables, like name description and path to python file. On python path, point to the python created in the virtualenv, so it will have installed corresponding libraries Give writes privilegies chmod +x /etc/init.d/<daemon-name> -v Reload daemon configuration systemctl daemon-reload Start service service <daemon-name> start All operations below may be required to be executed with sudo","title":"How to create a daemon in linux"},{"location":"utils/daemon/#references","text":"Instructions Extra docu","title":"References"},{"location":"utils/databases/","text":"Databases PostgreSQL Relational database, similar to MySql. Once installed, run psql to access via command line to the instances. An instance of postgresql can have multiple databases. Another interesting command is pg_dump , it helps you to generate a backup of your tables into a .sql file. Connection options: -h, --host=HOSTNAME database server host or socket directory (default: \"/var/run/postgresql\") -p, --port=PORT database server port (default: \"5432\") -U, --username=USERNAME database user name (default: \"<user>\") -w, --no-password never prompt for password -W, --password force password prompt (should happen automatically) Google cloud SQL From Google cloud you can create an instance of mysql/postgres for you desire database. You can connect via socket or url to database. Online configuration, require code changes. In addition, you can have a connection using the Cloud SQL Auth proxy Firestore NoSQL database from Google cloud. python libraries to use and access documents. References Database 101 PostgreSQL PostgreSQL Cheatsheet PostgreSQL Backup MongoDB [Google Cloud Postgres]https://cloud.google.com/sql/docs/postgres Firestore","title":"Databases"},{"location":"utils/databases/#databases","text":"","title":"Databases"},{"location":"utils/databases/#postgresql","text":"Relational database, similar to MySql. Once installed, run psql to access via command line to the instances. An instance of postgresql can have multiple databases. Another interesting command is pg_dump , it helps you to generate a backup of your tables into a .sql file. Connection options: -h, --host=HOSTNAME database server host or socket directory (default: \"/var/run/postgresql\") -p, --port=PORT database server port (default: \"5432\") -U, --username=USERNAME database user name (default: \"<user>\") -w, --no-password never prompt for password -W, --password force password prompt (should happen automatically)","title":"PostgreSQL"},{"location":"utils/databases/#google-cloud-sql","text":"From Google cloud you can create an instance of mysql/postgres for you desire database. You can connect via socket or url to database. Online configuration, require code changes. In addition, you can have a connection using the Cloud SQL Auth proxy","title":"Google cloud SQL"},{"location":"utils/databases/#firestore","text":"NoSQL database from Google cloud. python libraries to use and access documents.","title":"Firestore"},{"location":"utils/databases/#references","text":"Database 101 PostgreSQL PostgreSQL Cheatsheet PostgreSQL Backup MongoDB [Google Cloud Postgres]https://cloud.google.com/sql/docs/postgres Firestore","title":"References"},{"location":"utils/developing-api/","text":"Developing an API Briefly description of what should be consider when developing an API, some good practices. Good practices RESTful API endpoints in plural use - instead of _ don't use verbs, use names. actions are implicit in HTTP methods basic structure GET ALL `api/<resources>` HTTP status code 200 OK for a successful GET of resource, or empty results. GET BY ID `api/<resources>/<id>` HTTP status code 200 OK for a successful GET of resource. HTTP status code 404 KO for a KO GET of a not found resource. POST `api/<resources>` If a resource has been created on the origin server, the response SHOULD be 201 (Created) and contain an entity which describes the status of the request and refers to the new resource, and a Location header (see section 14.30). PUT `api/<resources>/<id>` HTTP status code 200 OK for a successful PUT of an update to an existing resource. No response body needed. (Per Section 9.6, 204 No Content is even more appropriate.) HTTP status code 400 Bad Request for an unsuccessful PUT, with natural-language text (such as English) in the response body that explains why the PUT failed. (RFC 2616 Section 10.4) HTTP Status Code 2XX -> success codes range 3XX -> redirect codes range 4XX -> client error codes range 5XX -> server error codes range More details Secrets Never store unencrypted secrets in .git repositories. If a secret enters a repository, private or public, then it should be considered compromised. Add sensitive files in .gitignore Store secrets safely. Encrypting your secrets using common tools, such as git secret. Storing them within a git repository can be beneficial when working in teams as it keeps secrets synced. Or use \"Secrets as a service\" solutions, such as AWS Secrets Manager, Vault, Google Secrets Manager... References Pragmatic restful API Naming rest API endpoints PUT vs POST","title":"Developing an API"},{"location":"utils/developing-api/#developing-an-api","text":"Briefly description of what should be consider when developing an API, some good practices.","title":"Developing an API"},{"location":"utils/developing-api/#good-practices-restful-api","text":"endpoints in plural use - instead of _ don't use verbs, use names. actions are implicit in HTTP methods basic structure GET ALL `api/<resources>` HTTP status code 200 OK for a successful GET of resource, or empty results. GET BY ID `api/<resources>/<id>` HTTP status code 200 OK for a successful GET of resource. HTTP status code 404 KO for a KO GET of a not found resource. POST `api/<resources>` If a resource has been created on the origin server, the response SHOULD be 201 (Created) and contain an entity which describes the status of the request and refers to the new resource, and a Location header (see section 14.30). PUT `api/<resources>/<id>` HTTP status code 200 OK for a successful PUT of an update to an existing resource. No response body needed. (Per Section 9.6, 204 No Content is even more appropriate.) HTTP status code 400 Bad Request for an unsuccessful PUT, with natural-language text (such as English) in the response body that explains why the PUT failed. (RFC 2616 Section 10.4)","title":"Good practices RESTful API"},{"location":"utils/developing-api/#http-status-code","text":"2XX -> success codes range 3XX -> redirect codes range 4XX -> client error codes range 5XX -> server error codes range More details","title":"HTTP Status Code"},{"location":"utils/developing-api/#secrets","text":"Never store unencrypted secrets in .git repositories. If a secret enters a repository, private or public, then it should be considered compromised. Add sensitive files in .gitignore Store secrets safely. Encrypting your secrets using common tools, such as git secret. Storing them within a git repository can be beneficial when working in teams as it keeps secrets synced. Or use \"Secrets as a service\" solutions, such as AWS Secrets Manager, Vault, Google Secrets Manager...","title":"Secrets"},{"location":"utils/developing-api/#references","text":"Pragmatic restful API Naming rest API endpoints PUT vs POST","title":"References"},{"location":"utils/regex/","text":"REGEX Regex is short for Regular Expression. It helps to match, find or manage text. Start by typing OK in the Regex field to proceed to the first step and access the more detailed description. What is Regular Expressions Regex? Regular Expressions are a string of characters that express a search pattern. Often abbreviated as Regex or Regexp. It is especially used to find or replace words in texts. In addition, we can test whether a text complies with the rules we set. For example, let's say you have a list of filenames. And you only want to find files with the pdf extension. Following typing an expression ^\\w+\\.pdf$ will work. The meaning of the definitions in this expression will become clearer as the steps progress. Basic Matchers The character or word we want to find is written directly. It is similar to a normal search process. For example, to find the word curious in the text, type the same. The period . allows selecting any character, including special characters and spaces. Character Sets [abc] If one of the characters in a word can be various characters, we write it in square brackets [] with all alternative characters. For example, to write an expression that can find all the words in the text, type the characters a, e, i, o, u adjacently within square brackets [] . Negated Character Sets [^abc] To find all words in the text below, except for ber and bor, type e and o side by side after the caret ^ character inside square brackets [] . Character Sets: Alphanumeric Range Letter Range [a-z] To find the letters in the specified range, the starting letter and the ending letter are written in square brackets [] with a dash between them - . It is case-sensitive. Type the expression that will select all lowercase letters between e and o , including themselves. Character Sets: Digit Range Number Range [0-9] To find the numbers in the specified range, the starting number and the ending number are written in square brackets [] with a dash - between them. Write an expression that will select all numbers between 3 and 6, including themselves. Repetitions Some special characters are used to specify how many times a character will be repeated in the text. These special characters are the plus + , the asterisk * , and the question mark ? . Repetitions: Asterisk Asterisk * We put an asterisk * after a character to indicate that the character may either not match at all or can match many times. For example, indicate that the letter e should never occur in the text, or it can occur once or more side by side. Repetitions: The Plus Plus Sign + To indicate that a character can occur one or more times, we put a plus sign + after a character. For example, indicate that the letter e can occur one or more times in the text. Repetitions: The Question Mark Question Mark ? To indicate that a character is optional, we put a ? question mark after a character. For example, indicate that the following letter u is optional. Repetitions: Curly Braces To express a certain number of occurrences of a character, we write curly braces {n} along with how many times we want it to occur at the end. For example, indicate that the following letter e can occur only 2 times. To express at least a certain number of occurrences of a character, we write the end of the character at least how many times we want it to occur, with a comma , at the end, and inside curly braces {n, } . For example, indicate that the following letter e can occur at least 3 times. To express the occurrence of a character in a certain number range, we write curly braces {x,y} with the interval we want to go to the end. For example, indicate that the following letter e can only occur between 1 and 3. Grouping Parentheses ( ): Grouping We can group an expression and use these groups to reference or enforce some rules. To group an expression, we enclose () in parentheses. For now just group haa below. Group Reference Referencing a Group The words ha and haa are grouped below. The first group is used by writing \\1 to avoid rewriting. Here 1 denotes the order of grouping. Type \\2 at the end of the expression to refer to the second group. Non-capturing Groupping Parentheses (?: ) : Non-capturing Grouping You can group an expression and ensure that it is not captured by references. For example, below are two groups. However, the first group reference we denote with \\1 actually indicates the second group, as the first is a non-capturing group. Pipe Character | It allows to specify that an expression can be in different expressions. Thus, all possible statements are written separated by the pipe sign | . This differs from charset [abc] , charsets operate at the character level. Alternatives are at the expression level. For example, the following expression would select both cat and Cat. Add another pipe sign | to the end of the expression and type rat so that all words are selected. ### Escape Character \\ There are special characters that we use when writing regex. { } [ ] / \\ + * . $^ | ? Before we can select these characters themselves, we need to use an escape character \\ . For example, to select the dot . and asterisk * characters in the text, let's add an escape character \\ before it. Start of The String Caret Sign ^ : Selecting by Line Start We were using [0-9] to find numbers. To find only numbers at the beginning of a line, prefix this expression with the ^ sign. End of The String Dollar Sign $ : Selecting by End of Line Let's use the $ sign after the html value to find the html texts only at the end of the line. Alphanumeric Word Character \\w : Letter, Number and Underscore The expression \\w is used to find letters, numbers and underscore characters. Let's use the expression \\w to find word characters in the text. Non-alphanumeric Except Word Character \\W The expression \\W is used to find characters other than letters, numbers, and underscores. Digits Number Character \\d \\d is used to find only number characters. Non-digits Except Number Character \\D \\D is used to find non-numeric characters. Whitespace Characters Space Character \\s \\s is used to find only space characters. Non-whitespace Characters Except Space Character \\S \\S is used to find non-space characters. Lookarounds If we want the phrase we're writing to come before or after another phrase, we need to \"lookaround\". Take the next step to learn how to \"lookaround\". Lookarounds: Positive Lookahead Positive Lookahead: (?=) For example, we want to select the hour value in the text. Therefore, to select only the numerical values that have PM after them, we need to write the positive look-ahead expression (?=) after our expression. Include PM after the = sign inside the parentheses. Lookarounds: Negative Lookahead Negative Lookahead: (?!) For example, we want to select numbers other than the hour value in the text. Therefore, we need to write the negative look-ahead (?!) expression after our expression to select only the numerical values that do not have PM after them. Include PM after the ! sign inside the parentheses. Lookarounds: Positive Lookbehind Positive Lookbehind: (?<=) For example, we want to select the price value in the text. Therefore, to select only the number values that preceded by $ , we need to write the positive lookbehind expression (?<=) before our expression. Add \\$ after the = sign inside the brackets. Lookarounds: Negative Lookbehind Negative Lookbehind: (?<!) For example, we want to select numbers in the text other than the price value. Therefore, to select only numeric values that are not preceded by $ , we need to write the negative lookbehind (?<!) before our expression. Add \\$ after the ! inside the brackets. Flags Flags change the output of the expression. That's why flags are also called modifiers. Determines whether the typed expression treats text as separate lines, is case sensitive, or finds all matches. Continue to the next step to learn the flags. Flags: Global The global flag causes the expression to select all matches. If not used it will only select the first match. Now enable the global flag to be able to select all matches. /g all matches Flags: Multiline Regex sees all text as one line. But we use the multiline flag to handle each line separately. In this way, the expressions we write according to the end of the linework separately for each line. Now enable the multiline flag to find all matches. /m multiline Flags: Case Insensitive In order to remove the case-sensitiveness of the expression we have written, we must activate the case-insensitive flag. /i case insensitve Greedy Matching Regex does a greedy match by default. This means that the matchmaking will be as long as possible. Check out the example below. It refers to any match that ends in r and can be any character preceded by it. But it does not stop at the first letter r . Lazy Matching Lazy matchmaking, unlike greedy matching, stops at the first matching. For example, in the example below, add a ? after * to find the first match that ends with the letter r and is preceded by any character. It means that this match will stop at the first letter r . Reference Learn Regex Cheatsheet Regex Crossword Regex library","title":"Regex"},{"location":"utils/regex/#regex","text":"Regex is short for Regular Expression. It helps to match, find or manage text. Start by typing OK in the Regex field to proceed to the first step and access the more detailed description.","title":"REGEX"},{"location":"utils/regex/#what-is-regular-expressions-regex","text":"Regular Expressions are a string of characters that express a search pattern. Often abbreviated as Regex or Regexp. It is especially used to find or replace words in texts. In addition, we can test whether a text complies with the rules we set. For example, let's say you have a list of filenames. And you only want to find files with the pdf extension. Following typing an expression ^\\w+\\.pdf$ will work. The meaning of the definitions in this expression will become clearer as the steps progress.","title":"What is Regular Expressions Regex?"},{"location":"utils/regex/#basic-matchers","text":"The character or word we want to find is written directly. It is similar to a normal search process. For example, to find the word curious in the text, type the same. The period . allows selecting any character, including special characters and spaces.","title":"Basic Matchers"},{"location":"utils/regex/#character-sets-abc","text":"If one of the characters in a word can be various characters, we write it in square brackets [] with all alternative characters. For example, to write an expression that can find all the words in the text, type the characters a, e, i, o, u adjacently within square brackets [] .","title":"Character Sets [abc]"},{"location":"utils/regex/#negated-character-sets-abc","text":"To find all words in the text below, except for ber and bor, type e and o side by side after the caret ^ character inside square brackets [] .","title":"Negated Character Sets [^abc]"},{"location":"utils/regex/#character-sets-alphanumeric-range","text":"Letter Range [a-z] To find the letters in the specified range, the starting letter and the ending letter are written in square brackets [] with a dash between them - . It is case-sensitive. Type the expression that will select all lowercase letters between e and o , including themselves.","title":"Character Sets: Alphanumeric Range"},{"location":"utils/regex/#character-sets-digit-range","text":"Number Range [0-9] To find the numbers in the specified range, the starting number and the ending number are written in square brackets [] with a dash - between them. Write an expression that will select all numbers between 3 and 6, including themselves.","title":"Character Sets: Digit Range"},{"location":"utils/regex/#repetitions","text":"Some special characters are used to specify how many times a character will be repeated in the text. These special characters are the plus + , the asterisk * , and the question mark ? .","title":"Repetitions"},{"location":"utils/regex/#repetitions-asterisk","text":"Asterisk * We put an asterisk * after a character to indicate that the character may either not match at all or can match many times. For example, indicate that the letter e should never occur in the text, or it can occur once or more side by side.","title":"Repetitions: Asterisk"},{"location":"utils/regex/#repetitions-the-plus","text":"Plus Sign + To indicate that a character can occur one or more times, we put a plus sign + after a character. For example, indicate that the letter e can occur one or more times in the text.","title":"Repetitions: The Plus"},{"location":"utils/regex/#repetitions-the-question-mark","text":"Question Mark ? To indicate that a character is optional, we put a ? question mark after a character. For example, indicate that the following letter u is optional.","title":"Repetitions: The Question Mark"},{"location":"utils/regex/#repetitions-curly-braces","text":"To express a certain number of occurrences of a character, we write curly braces {n} along with how many times we want it to occur at the end. For example, indicate that the following letter e can occur only 2 times. To express at least a certain number of occurrences of a character, we write the end of the character at least how many times we want it to occur, with a comma , at the end, and inside curly braces {n, } . For example, indicate that the following letter e can occur at least 3 times. To express the occurrence of a character in a certain number range, we write curly braces {x,y} with the interval we want to go to the end. For example, indicate that the following letter e can only occur between 1 and 3.","title":"Repetitions: Curly Braces"},{"location":"utils/regex/#grouping","text":"","title":"Grouping"},{"location":"utils/regex/#parentheses-grouping","text":"We can group an expression and use these groups to reference or enforce some rules. To group an expression, we enclose () in parentheses. For now just group haa below.","title":"Parentheses ( ): Grouping"},{"location":"utils/regex/#group-reference","text":"Referencing a Group The words ha and haa are grouped below. The first group is used by writing \\1 to avoid rewriting. Here 1 denotes the order of grouping. Type \\2 at the end of the expression to refer to the second group.","title":"Group Reference"},{"location":"utils/regex/#non-capturing-groupping","text":"Parentheses (?: ) : Non-capturing Grouping You can group an expression and ensure that it is not captured by references. For example, below are two groups. However, the first group reference we denote with \\1 actually indicates the second group, as the first is a non-capturing group.","title":"Non-capturing Groupping"},{"location":"utils/regex/#pipe-character","text":"It allows to specify that an expression can be in different expressions. Thus, all possible statements are written separated by the pipe sign | . This differs from charset [abc] , charsets operate at the character level. Alternatives are at the expression level. For example, the following expression would select both cat and Cat. Add another pipe sign | to the end of the expression and type rat so that all words are selected. ### Escape Character \\ There are special characters that we use when writing regex. { } [ ] / \\ + * . $^ | ? Before we can select these characters themselves, we need to use an escape character \\ . For example, to select the dot . and asterisk * characters in the text, let's add an escape character \\ before it.","title":"Pipe Character |"},{"location":"utils/regex/#start-of-the-string","text":"Caret Sign ^ : Selecting by Line Start We were using [0-9] to find numbers. To find only numbers at the beginning of a line, prefix this expression with the ^ sign.","title":"Start of The String"},{"location":"utils/regex/#end-of-the-string","text":"Dollar Sign $ : Selecting by End of Line Let's use the $ sign after the html value to find the html texts only at the end of the line.","title":"End of The String"},{"location":"utils/regex/#alphanumeric","text":"Word Character \\w : Letter, Number and Underscore The expression \\w is used to find letters, numbers and underscore characters. Let's use the expression \\w to find word characters in the text.","title":"Alphanumeric"},{"location":"utils/regex/#non-alphanumeric","text":"Except Word Character \\W The expression \\W is used to find characters other than letters, numbers, and underscores.","title":"Non-alphanumeric"},{"location":"utils/regex/#digits","text":"Number Character \\d \\d is used to find only number characters.","title":"Digits"},{"location":"utils/regex/#non-digits","text":"Except Number Character \\D \\D is used to find non-numeric characters.","title":"Non-digits"},{"location":"utils/regex/#whitespace-characters","text":"Space Character \\s \\s is used to find only space characters.","title":"Whitespace Characters"},{"location":"utils/regex/#non-whitespace-characters","text":"Except Space Character \\S \\S is used to find non-space characters.","title":"Non-whitespace Characters"},{"location":"utils/regex/#lookarounds","text":"If we want the phrase we're writing to come before or after another phrase, we need to \"lookaround\". Take the next step to learn how to \"lookaround\".","title":"Lookarounds"},{"location":"utils/regex/#lookarounds-positive-lookahead","text":"Positive Lookahead: (?=) For example, we want to select the hour value in the text. Therefore, to select only the numerical values that have PM after them, we need to write the positive look-ahead expression (?=) after our expression. Include PM after the = sign inside the parentheses.","title":"Lookarounds: Positive Lookahead"},{"location":"utils/regex/#lookarounds-negative-lookahead","text":"Negative Lookahead: (?!) For example, we want to select numbers other than the hour value in the text. Therefore, we need to write the negative look-ahead (?!) expression after our expression to select only the numerical values that do not have PM after them. Include PM after the ! sign inside the parentheses.","title":"Lookarounds: Negative Lookahead"},{"location":"utils/regex/#lookarounds-positive-lookbehind","text":"Positive Lookbehind: (?<=) For example, we want to select the price value in the text. Therefore, to select only the number values that preceded by $ , we need to write the positive lookbehind expression (?<=) before our expression. Add \\$ after the = sign inside the brackets.","title":"Lookarounds: Positive Lookbehind"},{"location":"utils/regex/#lookarounds-negative-lookbehind","text":"Negative Lookbehind: (?<!) For example, we want to select numbers in the text other than the price value. Therefore, to select only numeric values that are not preceded by $ , we need to write the negative lookbehind (?<!) before our expression. Add \\$ after the ! inside the brackets.","title":"Lookarounds: Negative Lookbehind"},{"location":"utils/regex/#flags","text":"Flags change the output of the expression. That's why flags are also called modifiers. Determines whether the typed expression treats text as separate lines, is case sensitive, or finds all matches. Continue to the next step to learn the flags.","title":"Flags"},{"location":"utils/regex/#flags-global","text":"The global flag causes the expression to select all matches. If not used it will only select the first match. Now enable the global flag to be able to select all matches. /g all matches","title":"Flags: Global"},{"location":"utils/regex/#flags-multiline","text":"Regex sees all text as one line. But we use the multiline flag to handle each line separately. In this way, the expressions we write according to the end of the linework separately for each line. Now enable the multiline flag to find all matches. /m multiline","title":"Flags: Multiline"},{"location":"utils/regex/#flags-case-insensitive","text":"In order to remove the case-sensitiveness of the expression we have written, we must activate the case-insensitive flag. /i case insensitve","title":"Flags: Case Insensitive"},{"location":"utils/regex/#greedy-matching","text":"Regex does a greedy match by default. This means that the matchmaking will be as long as possible. Check out the example below. It refers to any match that ends in r and can be any character preceded by it. But it does not stop at the first letter r .","title":"Greedy Matching"},{"location":"utils/regex/#lazy-matching","text":"Lazy matchmaking, unlike greedy matching, stops at the first matching. For example, in the example below, add a ? after * to find the first match that ends with the letter r and is preceded by any character. It means that this match will stop at the first letter r .","title":"Lazy Matching"},{"location":"utils/regex/#reference","text":"Learn Regex Cheatsheet Regex Crossword Regex library","title":"Reference"},{"location":"utils/supervisor/","text":"Supervisor Service How to create new supervisor service First of all, you need to install supervisor service: sudo apt-get install supervisor -y Path to copy configurations files: /etc/supervisor/conf.d/* After copy file, reread supervisor configuration: sudo supervisorctl -c /etc/supervisor/supervisord.conf reread sudo supervisorctl -c /etc/supervisor/supervisord.conf reload If something went wrong, sock may be deleted in /var/run/supervisor.conf, and supervisorctl status will show an error. To solve, check new configuration files, if something is buggy, fix it or remove conf and run command again. Then, run, to relaoad new configuration and start service again with: sudo supervisorctl reload Now, your supervisor service should be up and running Reference Some interesting samples and documentation Configuration Sample Documentation","title":"Supervisor"},{"location":"utils/supervisor/#supervisor-service","text":"","title":"Supervisor Service"},{"location":"utils/supervisor/#how-to-create-new-supervisor-service","text":"First of all, you need to install supervisor service: sudo apt-get install supervisor -y Path to copy configurations files: /etc/supervisor/conf.d/* After copy file, reread supervisor configuration: sudo supervisorctl -c /etc/supervisor/supervisord.conf reread sudo supervisorctl -c /etc/supervisor/supervisord.conf reload If something went wrong, sock may be deleted in /var/run/supervisor.conf, and supervisorctl status will show an error. To solve, check new configuration files, if something is buggy, fix it or remove conf and run command again. Then, run, to relaoad new configuration and start service again with: sudo supervisorctl reload Now, your supervisor service should be up and running","title":"How to create new supervisor service"},{"location":"utils/supervisor/#reference","text":"Some interesting samples and documentation Configuration Sample Documentation","title":"Reference"},{"location":"utils/transmission/","text":"Transmission Transmission is a torrent client easy to install and configure to access via interface from outside raspberry. How to install and configure Execute following command in raspberry via ssh: sudo apt-get install transmission-daemon Transmission daemon needs to be updated with some of our configuration. For this, we need to edit configuration file. First, stop daemon sudo systemctl stop transmission-daemon Open and edit configuration file path should be either ~/.config/transmission-daemon/services.json or /etc/transmission/daemon.json After file is updated, we need to restart daemon so configuration is loaded and also start transmission daemon sudo systemctl daemon-reload sudo systemctl start transmission-daemon Now everything should be ready to go, and transmission will be accessible via interface from another computer sharing network with raspberry. References Edit transmission config file Useful info","title":"Transmission"},{"location":"utils/transmission/#transmission","text":"Transmission is a torrent client easy to install and configure to access via interface from outside raspberry.","title":"Transmission"},{"location":"utils/transmission/#how-to-install-and-configure","text":"Execute following command in raspberry via ssh: sudo apt-get install transmission-daemon Transmission daemon needs to be updated with some of our configuration. For this, we need to edit configuration file. First, stop daemon sudo systemctl stop transmission-daemon Open and edit configuration file path should be either ~/.config/transmission-daemon/services.json or /etc/transmission/daemon.json After file is updated, we need to restart daemon so configuration is loaded and also start transmission daemon sudo systemctl daemon-reload sudo systemctl start transmission-daemon Now everything should be ready to go, and transmission will be accessible via interface from another computer sharing network with raspberry.","title":"How to install and configure"},{"location":"utils/transmission/#references","text":"Edit transmission config file Useful info","title":"References"},{"location":"utils/ubuntu/","text":"Ubuntu I am using ubuntu, a linux distro based on Debian. It is open source, with a big community and support for common issues. Oh my zsh Ubuntu has a default shell, to run different commands, but there are others like zsh. To add more power to the shell, I used Oh my zsh on top. It is open source, big collaborative community, customizable and with many plugins to enable to enrich the experience of working with a terminal. dotfiles Private files in a Linux os. Usually, they contain configuration used by different tools, like terminal, profile, k8s, git... It can be used to speed up (installation)[https://github.com/McLargo/installation] of a new OS from scratch. Totally customizable with my needs. References Linux commands cheatsheet Oh my zsh Bash/zsh shortcuts Getting started with .dotfiles","title":"Ubuntu"},{"location":"utils/ubuntu/#ubuntu","text":"I am using ubuntu, a linux distro based on Debian. It is open source, with a big community and support for common issues.","title":"Ubuntu"},{"location":"utils/ubuntu/#oh-my-zsh","text":"Ubuntu has a default shell, to run different commands, but there are others like zsh. To add more power to the shell, I used Oh my zsh on top. It is open source, big collaborative community, customizable and with many plugins to enable to enrich the experience of working with a terminal.","title":"Oh my zsh"},{"location":"utils/ubuntu/#dotfiles","text":"Private files in a Linux os. Usually, they contain configuration used by different tools, like terminal, profile, k8s, git... It can be used to speed up (installation)[https://github.com/McLargo/installation] of a new OS from scratch. Totally customizable with my needs.","title":"dotfiles"},{"location":"utils/ubuntu/#references","text":"Linux commands cheatsheet Oh my zsh Bash/zsh shortcuts Getting started with .dotfiles","title":"References"},{"location":"utils/working-environment/","text":"Working environment Structure Create a folder named work in home directory: mkdir $HOME/work Inside, create following structure: mkdir $HOME/work/src : to store repositories mkdir $HOME/work/projects/<company> : to store info from company, onboarding, one to one... folder for Company. Store date in the name of the file, such as meeting-20XX-XX-XX.md mkdir $HOME/work/projects/<projecy-name> : One extra folder for each project. Some common subfolders may be: scripts , documents , sublime mkdir $HOME/work/utils : to store programs, binary, or other packages References Project template","title":"Working environment"},{"location":"utils/working-environment/#working-environment","text":"","title":"Working environment"},{"location":"utils/working-environment/#structure","text":"Create a folder named work in home directory: mkdir $HOME/work Inside, create following structure: mkdir $HOME/work/src : to store repositories mkdir $HOME/work/projects/<company> : to store info from company, onboarding, one to one... folder for Company. Store date in the name of the file, such as meeting-20XX-XX-XX.md mkdir $HOME/work/projects/<projecy-name> : One extra folder for each project. Some common subfolders may be: scripts , documents , sublime mkdir $HOME/work/utils : to store programs, binary, or other packages","title":"Structure"},{"location":"utils/working-environment/#references","text":"Project template","title":"References"}]}